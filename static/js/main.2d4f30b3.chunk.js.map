{"version":3,"sources":["components/Navigation/Navigation.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTableRow/PeopleTableRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["Navigation","className","role","isActive","cn","to","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","isPerson","undefined","classNames","sex","slug","name","PeopleTableRow","selectedPerson","useParams","isFatherObj","isMotherObj","born","died","mother","motherName","father","fatherName","PeopleTable","people","map","initialState","isPeopleLoading","hasPeopleLoadingError","PeoplePage","useState","state","setState","getPeopleFromApi","prevState","res","peopleData","find","catch","finally","useEffect","length","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.2d4f30b3.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person | undefined\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const isPerson = person !== undefined;\n\n  return (\n    <>\n      {isPerson && (\n        <Link\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PeopleTableRow: React.FC<Props> = ({ person }) => {\n  const { selectedPerson } = useParams();\n\n  const isFatherObj = 'father' in person;\n  const isMotherObj = 'mother' in person;\n\n  return (\n    <tr\n      key={person.slug}\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': person.slug === selectedPerson,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {isMotherObj\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n\n      <td>\n        {isFatherObj\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PeopleTableRow } from '../PeopleTableRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people !== null && people.map(person => (\n        <PeopleTableRow\n          key={person.slug}\n          person={person}\n        />\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\ninterface State {\n  people: Person[] | null,\n  isPeopleLoading: boolean,\n  hasPeopleLoadingError: boolean,\n}\n\nconst initialState: State = {\n  people: null,\n  isPeopleLoading: false,\n  hasPeopleLoadingError: false,\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [state, setState] = useState(initialState);\n\n  const getPeopleFromApi = async () => {\n    setState(prevState => ({\n      ...prevState,\n      isPeopleLoading: true,\n    }));\n\n    await getPeople()\n      .then(res => {\n        const peopleData: Person[] = res.map((person: Person) => {\n          const mother = res.find((\n            { name: motherName }: Person,\n          ) => motherName === person.motherName);\n\n          const father = res.find((\n            { name: fatherName }: Person,\n          ) => fatherName === person.fatherName);\n\n          if (mother !== undefined && father !== undefined) {\n            return {\n              ...person,\n              mother,\n              father,\n            };\n          }\n\n          if (mother !== undefined) {\n            return {\n              ...person,\n              mother,\n            };\n          }\n\n          if (father !== undefined) {\n            return {\n              ...person,\n              father,\n            };\n          }\n\n          return person;\n        });\n\n        setState(prevState => ({\n          ...prevState,\n          people: peopleData,\n        }));\n      })\n      .catch(() => setState(prevState => ({\n        ...prevState,\n        hasPeopleLoadingError: true,\n      })))\n      .finally(() => setState(prevState => ({\n        ...prevState,\n        isPeopleLoading: false,\n      })));\n  };\n\n  useEffect(() => {\n    getPeopleFromApi();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {state.isPeopleLoading && <Loader />}\n\n          {state.hasPeopleLoadingError && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {state.people !== null\n          && state.people.length === 0\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {state.people !== null\n          && state.people.length !== 0\n          && (\n            <PeopleTable people={state.people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<App />}\n        >\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">\n                Page not found\n              </h1>\n            )}\n          />\n\n          <Route\n            index\n            element={(\n              <h1 className=\"title\">\n                Home Page\n              </h1>\n            )}\n          />\n\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people/\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n\n            <Route\n              path=\":selectedPerson\"\n              element={<PeoplePage />}\n            />\n          </Route>\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}